name: pipeline

on:
  push:
    branches:
      - main

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: 'maven'

      - run: mvn install

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: 'maven'
      - name: Package
        run: mvn package

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
          package: '*.jar'
      - name: Publish package
        run: mvn --batch-mode --update-snapshots verify

  deploy-Prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: publish
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Build and Push to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 385515961485.dkr.ecr.us-east-1.amazonaws.com
          docker build -t fast-food .
          docker tag fast-food:latest 385515961485.dkr.ecr.us-east-1.amazonaws.com/fast-food:latest
          docker push 385515961485.dkr.ecr.us-east-1.amazonaws.com/fast-food:latest

#      - name: Dispatches Deploy on Infra Kubernetes Repository
#        run: |
#          curl -X POST -H "Authorization: token ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}" \
#          -H "Accept: application/vnd.github.v3+json" \
#          https://api.github.com/repos/beraldoLucca/fast-food-infra-kubernetes/actions/workflows/deploy.yml/dispatches \
#          -d '{"ref":"main"}'
